apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: k8s-db-pvc
  namespace: k8s-todo-app

spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-db-deployment
  namespace: k8s-todo-app

spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-db
  template:
    metadata:
      labels:
        app: k8s-db
    spec:
      containers:
        - name: k8s-db
          image: k8s-db:dev
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: todos
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: k8s-todo-storage
              mountPath: /var/lib/mysql
            - name: k8s-db-config-storage
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: k8s-todo-storage
          persistentVolumeClaim:
            claimName: k8s-db-pvc
        - name: k8s-db-config-storage
          configMap:
            name: k8s-db-config

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-db-service
  namespace: k8s-todo-app

spec:
  selector:
    app: k8s-db
  ports:
    - port: 3306
      targetPort: 3306

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-db-config
  namespace: k8s-todo-app

data:
  0-tables.sql: |
    CREATE DATABASE IF NOT EXISTS todos;

    USE todos;
    CREATE TABLE IF NOT EXISTS todos (
      id INT AUTO_INCREMENT PRIMARY KEY,
      text TEXT NOT NULL,
      done BOOLEAN NOT NULL DEFAULT FALSE
    );

  1-sample.sql: |
    USE todos;

    INSERT INTO todos
      (text, done) 
    VALUES
      ('todo-1', FALSE),
      ('todo-2', TRUE),
      ('todo-3', FALSE),
      ('todo-4', FALSE);
